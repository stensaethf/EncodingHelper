{\rtf1\ansi\ansicpg1252\cocoartf1344\cocoasubrtf720
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 Frederik Roenn Stensaeth (stensaethf) Alex Griese (griesea)\
\
We implemented the \'93infer input type by default\'94. This means that the\
 user does not need to specify the type of output using the the -i or the\
 \'97input flags. UTF-8 is detected by checking for \\x and code points \
are detected by checking for U+. If the input covers more than 1 \
index of the args array, we know that the input is of type code points \
- this is because only code points can possibly cover more than one \
index of the args array. We are able to infer the input type regardless \
of whether there an output flag or not. However, the user is free to \
include an input flag should should the user wish to do so.\
\
Example:\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 > U+0041\
Character: A\
Code point: U+0041\
Name: LATIN CAPITAL LETTER A\
UTF-8: \\x41\
> U+0041 U+0041\
String: AA\
Code points: U+0041 U+0041\
UTF-8: \'91\\x41\\x41\'92\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 > -o utf8 U+0041\
UTF-8: \\x41\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 >\'92\\x41\'92\
Character: A\
Code point: U+0041\
Name: LATIN CAPITAL LETTER A\
UTF-8: \'91\\x41\'92\
>\'92\\x41\\x41\'92\
String: AA\
Code point: U+0041\
UTF-8: \\x41\\x41\
>-o codepoint \'92\\x41\'92\
Code point: U+0041\
\
Note:\
We did not implement any tests for the methods we created in Main.java, \
as all these method are private methods. A quick google search told us that \
to test methods that called System.exit(1), would require a hack of the \
security manager, which seems rather excessive. \
}